{"version":3,"file":"json-patch-duplex.min.js","sources":["../src/json-patch-duplex.js"],"names":["jsonpatch","_equals","a","b","_isArray","length","i","l","bKeys","_objectKeys","bLength","escapePathComponent","str","indexOf","replace","_getPathRecursive","root","obj","found","key","hasOwnProperty","getPath","path","Error","getMirror","ilen","beforeDict","getObserverFromMirror","mirror","callback","j","jlen","observers","observer","removeObserverFromMirror","splice","unobserve","generate","Object","observe","_unobserve","clearTimeout","next","patches","Mirror","push","arr","_observe","alen","name","object","type","observeOps","call","value","JSON","parse","stringify","intervals","this","currentInterval","dirtyCheck","fastCheck","setTimeout","slowCheck","window","addEventListener","attachEvent","ObserverInfo","v","deliverChangeRecords","_generate","temp","newKeys","oldKeys","changed","deleted","t","oldVal","newVal","op","isInteger","charCode","len","charCodeAt","apply","tree","patch","result","p","plen","keys","split","undefined","from","index","parseInt","arrOps","objOps","rootOps","compare","tree1","tree2","o","add","remove","move","copy","test","_get","delete","update","Array","isArray","exports"],"mappings":"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","sourcesContent":["/*!\r\n* json-patch-duplex.js 0.4.1\r\n* (c) 2013 Joachim Wester\r\n* MIT license\r\n*/\r\n\r\nvar jsonpatch;\r\n(function (jsonpatch) {\r\n    /* Do nothing if module is already defined.\r\n    Doesn't look nice, as we cannot simply put\r\n    `!jsonpatch &&` before this immediate function call\r\n    in TypeScript.\r\n    */\r\n    if (jsonpatch.observe) {\r\n        return;\r\n    }\r\n\r\n    var _objectKeys = (function () {\r\n        if (Object.keys)\r\n            return Object.keys;\r\n\r\n        return function (o) {\r\n            var keys = [];\r\n            for (var i in o) {\r\n                if (o.hasOwnProperty(i)) {\r\n                    keys.push(i);\r\n                }\r\n            }\r\n            return keys;\r\n        };\r\n    })();\r\n\r\n    function _equals(a, b) {\r\n        switch (typeof a) {\r\n            case 'undefined':\r\n            case 'boolean':\r\n            case 'string':\r\n            case 'number':\r\n                return a === b;\r\n            case 'object':\r\n                if (a === null)\r\n                    return b === null;\r\n                if (_isArray(a)) {\r\n                    if (!_isArray(b) || a.length !== b.length)\r\n                        return false;\r\n\r\n                    for (var i = 0, l = a.length; i < l; i++)\r\n                        if (!_equals(a[i], b[i]))\r\n                            return false;\r\n\r\n                    return true;\r\n                }\r\n\r\n                var bKeys = _objectKeys(b);\r\n                var bLength = bKeys.length;\r\n                if (_objectKeys(a).length !== bLength)\r\n                    return false;\r\n\r\n                for (var i = 0; i < bLength; i++)\r\n                    if (!_equals(a[i], b[i]))\r\n                        return false;\r\n\r\n                return true;\r\n\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    /* We use a Javascript hash to store each\r\n    function. Each hash entry (property) uses\r\n    the operation identifiers specified in rfc6902.\r\n    In this way, we can map each patch operation\r\n    to its dedicated function in efficient way.\r\n    */\r\n    /* The operations applicable to an object */\r\n    var objOps = {\r\n        add: function (obj, key) {\r\n            obj[key] = this.value;\r\n            return true;\r\n        },\r\n        remove: function (obj, key) {\r\n            delete obj[key];\r\n            return true;\r\n        },\r\n        replace: function (obj, key) {\r\n            obj[key] = this.value;\r\n            return true;\r\n        },\r\n        move: function (obj, key, tree) {\r\n            var temp = { op: \"_get\", path: this.from };\r\n            apply(tree, [temp]);\r\n            apply(tree, [\r\n                { op: \"remove\", path: this.from }\r\n            ]);\r\n            apply(tree, [\r\n                { op: \"add\", path: this.path, value: temp.value }\r\n            ]);\r\n            return true;\r\n        },\r\n        copy: function (obj, key, tree) {\r\n            var temp = { op: \"_get\", path: this.from };\r\n            apply(tree, [temp]);\r\n            apply(tree, [\r\n                { op: \"add\", path: this.path, value: temp.value }\r\n            ]);\r\n            return true;\r\n        },\r\n        test: function (obj, key) {\r\n            return _equals(obj[key], this.value);\r\n        },\r\n        _get: function (obj, key) {\r\n            this.value = obj[key];\r\n        }\r\n    };\r\n\r\n    /* The operations applicable to an array. Many are the same as for the object */\r\n    var arrOps = {\r\n        add: function (arr, i) {\r\n            if (i > arr.length) {\r\n                throw new Error(\"The specified index MUST NOT be greater than the number of elements in the array.\");\r\n            }\r\n            arr.splice(i, 0, this.value);\r\n            return true;\r\n        },\r\n        remove: function (arr, i) {\r\n            arr.splice(i, 1);\r\n            return true;\r\n        },\r\n        replace: function (arr, i) {\r\n            arr[i] = this.value;\r\n            return true;\r\n        },\r\n        move: objOps.move,\r\n        copy: objOps.copy,\r\n        test: objOps.test,\r\n        _get: objOps._get\r\n    };\r\n\r\n    /* The operations applicable to object root. Many are the same as for the object */\r\n    var rootOps = {\r\n        add: function (obj) {\r\n            rootOps.remove.call(this, obj);\r\n            for (var key in this.value) {\r\n                if (this.value.hasOwnProperty(key)) {\r\n                    obj[key] = this.value[key];\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n        remove: function (obj) {\r\n            for (var key in obj) {\r\n                if (obj.hasOwnProperty(key)) {\r\n                    objOps.remove.call(this, obj, key);\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n        replace: function (obj) {\r\n            apply(obj, [\r\n                { op: \"remove\", path: this.path }\r\n            ]);\r\n            apply(obj, [\r\n                { op: \"add\", path: this.path, value: this.value }\r\n            ]);\r\n            return true;\r\n        },\r\n        move: objOps.move,\r\n        copy: objOps.copy,\r\n        test: function (obj) {\r\n            return (JSON.stringify(obj) === JSON.stringify(this.value));\r\n        },\r\n        _get: objOps._get\r\n    };\r\n\r\n    var observeOps = {\r\n        add: function (patches, path) {\r\n            var patch = {\r\n                op: \"add\",\r\n                path: path + escapePathComponent(this.name),\r\n                value: this.object[this.name] };\r\n            patches.push(patch);\r\n        },\r\n        'delete': function (patches, path) {\r\n            var patch = {\r\n                op: \"remove\",\r\n                path: path + escapePathComponent(this.name)\r\n            };\r\n            patches.push(patch);\r\n        },\r\n        update: function (patches, path) {\r\n            var patch = {\r\n                op: \"replace\",\r\n                path: path + escapePathComponent(this.name),\r\n                value: this.object[this.name]\r\n            };\r\n            patches.push(patch);\r\n        }\r\n    };\r\n\r\n    function escapePathComponent(str) {\r\n        if (str.indexOf('/') === -1 && str.indexOf('~') === -1)\r\n            return str;\r\n        return str.replace(/~/g, '~0').replace(/\\//g, '~1');\r\n    }\r\n\r\n    function _getPathRecursive(root, obj) {\r\n        var found;\r\n        for (var key in root) {\r\n            if (root.hasOwnProperty(key)) {\r\n                if (root[key] === obj) {\r\n                    return escapePathComponent(key) + '/';\r\n                } else if (typeof root[key] === 'object') {\r\n                    found = _getPathRecursive(root[key], obj);\r\n                    if (found != '') {\r\n                        return escapePathComponent(key) + '/' + found;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    function getPath(root, obj) {\r\n        if (root === obj) {\r\n            return '/';\r\n        }\r\n        var path = _getPathRecursive(root, obj);\r\n        if (path === '') {\r\n            throw new Error(\"Object not found in root\");\r\n        }\r\n        return '/' + path;\r\n    }\r\n\r\n    var beforeDict = [];\r\n\r\n    jsonpatch.intervals;\r\n\r\n    var Mirror = (function () {\r\n        function Mirror(obj) {\r\n            this.observers = [];\r\n            this.obj = obj;\r\n        }\r\n        return Mirror;\r\n    })();\r\n\r\n    var ObserverInfo = (function () {\r\n        function ObserverInfo(callback, observer) {\r\n            this.callback = callback;\r\n            this.observer = observer;\r\n        }\r\n        return ObserverInfo;\r\n    })();\r\n\r\n    function getMirror(obj) {\r\n        for (var i = 0, ilen = beforeDict.length; i < ilen; i++) {\r\n            if (beforeDict[i].obj === obj) {\r\n                return beforeDict[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    function getObserverFromMirror(mirror, callback) {\r\n        for (var j = 0, jlen = mirror.observers.length; j < jlen; j++) {\r\n            if (mirror.observers[j].callback === callback) {\r\n                return mirror.observers[j].observer;\r\n            }\r\n        }\r\n    }\r\n\r\n    function removeObserverFromMirror(mirror, observer) {\r\n        for (var j = 0, jlen = mirror.observers.length; j < jlen; j++) {\r\n            if (mirror.observers[j].observer === observer) {\r\n                mirror.observers.splice(j, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    function unobserve(root, observer) {\r\n        generate(observer);\r\n        if (Object.observe) {\r\n            _unobserve(observer, root);\r\n        } else {\r\n            clearTimeout(observer.next);\r\n        }\r\n\r\n        var mirror = getMirror(root);\r\n        removeObserverFromMirror(mirror, observer);\r\n    }\r\n    jsonpatch.unobserve = unobserve;\r\n\r\n    function observe(obj, callback) {\r\n        var patches = [];\r\n        var root = obj;\r\n        var observer;\r\n        var mirror = getMirror(obj);\r\n\r\n        if (!mirror) {\r\n            mirror = new Mirror(obj);\r\n            beforeDict.push(mirror);\r\n        } else {\r\n            observer = getObserverFromMirror(mirror, callback);\r\n        }\r\n\r\n        if (observer) {\r\n            return observer;\r\n        }\r\n\r\n        if (Object.observe) {\r\n            observer = function (arr) {\r\n                //This \"refresh\" is needed to begin observing new object properties\r\n                _unobserve(observer, obj);\r\n                _observe(observer, obj);\r\n\r\n                var a = 0, alen = arr.length;\r\n                while (a < alen) {\r\n                    if (!(arr[a].name === 'length' && _isArray(arr[a].object)) && !(arr[a].name === '__Jasmine_been_here_before__')) {\r\n                        var type = arr[a].type;\r\n\r\n                        switch (type) {\r\n                            case 'new':\r\n                                type = 'add';\r\n                                break;\r\n\r\n                            case 'deleted':\r\n                                type = 'delete';\r\n                                break;\r\n\r\n                            case 'updated':\r\n                                type = 'update';\r\n                                break;\r\n                        }\r\n\r\n                        observeOps[type].call(arr[a], patches, getPath(root, arr[a].object));\r\n                    }\r\n                    a++;\r\n                }\r\n\r\n                if (patches) {\r\n                    if (callback) {\r\n                        callback(patches);\r\n                    }\r\n                }\r\n                observer.patches = patches;\r\n                patches = [];\r\n            };\r\n        } else {\r\n            observer = {};\r\n\r\n            mirror.value = JSON.parse(JSON.stringify(obj)); // Faster than ES5 clone - http://jsperf.com/deep-cloning-of-objects/5\r\n\r\n            if (callback) {\r\n                //callbacks.push(callback); this has no purpose\r\n                observer.callback = callback;\r\n                observer.next = null;\r\n                var intervals = this.intervals || [100, 1000, 10000, 60000];\r\n                if (intervals.push === void 0) {\r\n                    throw new Error(\"jsonpatch.intervals must be an array\");\r\n                }\r\n                var currentInterval = 0;\r\n\r\n                var dirtyCheck = function () {\r\n                    generate(observer);\r\n                };\r\n                var fastCheck = function () {\r\n                    clearTimeout(observer.next);\r\n                    observer.next = setTimeout(function () {\r\n                        dirtyCheck();\r\n                        currentInterval = 0;\r\n                        observer.next = setTimeout(slowCheck, intervals[currentInterval++]);\r\n                    }, 0);\r\n                };\r\n                var slowCheck = function () {\r\n                    dirtyCheck();\r\n                    if (currentInterval == intervals.length)\r\n                        currentInterval = intervals.length - 1;\r\n                    observer.next = setTimeout(slowCheck, intervals[currentInterval++]);\r\n                };\r\n                if (typeof window !== 'undefined') {\r\n                    if (window.addEventListener) {\r\n                        window.addEventListener('mousedown', fastCheck);\r\n                        window.addEventListener('mouseup', fastCheck);\r\n                        window.addEventListener('keydown', fastCheck);\r\n                    } else {\r\n                        window.attachEvent('onmousedown', fastCheck);\r\n                        window.attachEvent('onmouseup', fastCheck);\r\n                        window.attachEvent('onkeydown', fastCheck);\r\n                    }\r\n                }\r\n                observer.next = setTimeout(slowCheck, intervals[currentInterval++]);\r\n            }\r\n        }\r\n        observer.patches = patches;\r\n        observer.object = obj;\r\n\r\n        mirror.observers.push(new ObserverInfo(callback, observer));\r\n\r\n        return _observe(observer, obj);\r\n    }\r\n    jsonpatch.observe = observe;\r\n\r\n    /// Listen to changes on an object tree, accumulate patches\r\n    function _observe(observer, obj) {\r\n        if (Object.observe) {\r\n            Object.observe(obj, observer);\r\n            for (var key in obj) {\r\n                if (obj.hasOwnProperty(key)) {\r\n                    var v = obj[key];\r\n                    if (v && typeof (v) === \"object\") {\r\n                        _observe(observer, v);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return observer;\r\n    }\r\n\r\n    function _unobserve(observer, obj) {\r\n        if (Object.observe) {\r\n            Object.unobserve(obj, observer);\r\n            for (var key in obj) {\r\n                if (obj.hasOwnProperty(key)) {\r\n                    var v = obj[key];\r\n                    if (v && typeof (v) === \"object\") {\r\n                        _unobserve(observer, v);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return observer;\r\n    }\r\n\r\n    function generate(observer) {\r\n        if (Object.observe) {\r\n            Object.deliverChangeRecords(observer);\r\n        } else {\r\n            var mirror;\r\n            for (var i = 0, ilen = beforeDict.length; i < ilen; i++) {\r\n                if (beforeDict[i].obj === observer.object) {\r\n                    mirror = beforeDict[i];\r\n                    break;\r\n                }\r\n            }\r\n            _generate(mirror.value, observer.object, observer.patches, \"\");\r\n        }\r\n        var temp = observer.patches;\r\n        if (temp.length > 0) {\r\n            observer.patches = [];\r\n            if (observer.callback) {\r\n                observer.callback(temp);\r\n            }\r\n        }\r\n        return temp;\r\n    }\r\n    jsonpatch.generate = generate;\r\n\r\n    // Dirty check if obj is different from mirror, generate patches and update mirror\r\n    function _generate(mirror, obj, patches, path) {\r\n        var newKeys = _objectKeys(obj);\r\n        var oldKeys = _objectKeys(mirror);\r\n        var changed = false;\r\n        var deleted = false;\r\n\r\n        for (var t = oldKeys.length - 1; t >= 0; t--) {\r\n            var key = oldKeys[t];\r\n            var oldVal = mirror[key];\r\n            if (obj.hasOwnProperty(key)) {\r\n                var newVal = obj[key];\r\n                if (oldVal instanceof Object) {\r\n                    _generate(oldVal, newVal, patches, path + \"/\" + escapePathComponent(key));\r\n                } else {\r\n                    if (oldVal != newVal) {\r\n                        changed = true;\r\n                        patches.push({ op: \"replace\", path: path + \"/\" + escapePathComponent(key), value: newVal });\r\n                        mirror[key] = newVal;\r\n                    }\r\n                }\r\n            } else {\r\n                patches.push({ op: \"remove\", path: path + \"/\" + escapePathComponent(key) });\r\n                delete mirror[key];\r\n                deleted = true; // property has been deleted\r\n            }\r\n        }\r\n\r\n        if (!deleted && newKeys.length == oldKeys.length) {\r\n            return;\r\n        }\r\n\r\n        for (var t = 0; t < newKeys.length; t++) {\r\n            var key = newKeys[t];\r\n            if (!mirror.hasOwnProperty(key)) {\r\n                patches.push({ op: \"add\", path: path + \"/\" + escapePathComponent(key), value: obj[key] });\r\n                mirror[key] = JSON.parse(JSON.stringify(obj[key]));\r\n            }\r\n        }\r\n    }\r\n\r\n    var _isArray;\r\n    if (Array.isArray) {\r\n        _isArray = Array.isArray;\r\n    } else {\r\n        _isArray = function (obj) {\r\n            return obj.push && typeof obj.length === 'number';\r\n        };\r\n    }\r\n\r\n    //3x faster than cached /^\\d+$/.test(str)\r\n    function isInteger(str) {\r\n        var i = 0;\r\n        var len = str.length;\r\n        var charCode;\r\n        while (i < len) {\r\n            charCode = str.charCodeAt(i);\r\n            if (charCode >= 48 && charCode <= 57) {\r\n                i++;\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /// Apply a json-patch operation on an object tree\r\n    function apply(tree, patches) {\r\n        var result = false, p = 0, plen = patches.length, patch;\r\n        while (p < plen) {\r\n            patch = patches[p];\r\n            p++;\r\n\r\n            // Find the object\r\n            var keys = patch.path.split('/');\r\n            var obj = tree;\r\n            var t = 1;\r\n            var len = keys.length;\r\n\r\n            if (patch.value === undefined && (patch.op === \"add\" || patch.op === \"replace\" || patch.op === \"test\")) {\r\n                throw new Error(\"'value' MUST be defined\");\r\n            }\r\n            if (patch.from === undefined && (patch.op === \"copy\" || patch.op === \"move\")) {\r\n                throw new Error(\"'from' MUST be defined\");\r\n            }\r\n\r\n            while (true) {\r\n                if (_isArray(obj)) {\r\n                    var index;\r\n                    if (keys[t] === '-') {\r\n                        index = obj.length;\r\n                    } else if (isInteger(keys[t])) {\r\n                        index = parseInt(keys[t], 10);\r\n                    } else {\r\n                        throw new Error(\"Expected an unsigned base-10 integer value, making the new referenced value the array element with the zero-based index\");\r\n                    }\r\n                    t++;\r\n                    if (t >= len) {\r\n                        result = arrOps[patch.op].call(patch, obj, index, tree); // Apply patch\r\n                        break;\r\n                    }\r\n                    obj = obj[index];\r\n                } else {\r\n                    var key = keys[t];\r\n                    if (key !== undefined) {\r\n                        if (key && key.indexOf('~') != -1)\r\n                            key = key.replace(/~1/g, '/').replace(/~0/g, '~'); // escape chars\r\n                        t++;\r\n                        if (t >= len) {\r\n                            result = objOps[patch.op].call(patch, obj, key, tree); // Apply patch\r\n                            break;\r\n                        }\r\n                    } else {\r\n                        t++;\r\n                        if (t >= len) {\r\n                            result = rootOps[patch.op].call(patch, obj, key, tree); // Apply patch\r\n                            break;\r\n                        }\r\n                    }\r\n                    obj = obj[key];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    jsonpatch.apply = apply;\r\n\r\n    function compare(tree1, tree2) {\r\n        var patches = [];\r\n        _generate(tree1, tree2, patches, '');\r\n        return patches;\r\n    }\r\n    jsonpatch.compare = compare;\r\n})(jsonpatch || (jsonpatch = {}));\r\n\r\nif (typeof exports !== \"undefined\") {\r\n    exports.apply = jsonpatch.apply;\r\n    exports.observe = jsonpatch.observe;\r\n    exports.unobserve = jsonpatch.unobserve;\r\n    exports.generate = jsonpatch.generate;\r\n    exports.compare = jsonpatch.compare;\r\n}\r\n"]}